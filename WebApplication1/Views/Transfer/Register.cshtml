
@{
    Layout = null;
    List<SS> cs = ViewBag.xia;
}
@using Models
<!DOCTYPE html>



<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="stylesheet"
          href="../../css/table.css" type="text/css"></link>
    <script type="text/javascript" src="../../javascript/jquery-1.7.2.js"></script>
    <script src="~/Scripts/vue/dist/vue.js"></script>
    <script src="~/Scripts/element-ui/lib/index.js"></script>
    <link href="~/Scripts/element-ui/lib/theme-chalk/index.css" rel="stylesheet" />
    <script src="~/Scripts/axios/dist/axios.js"></script>
    <style>
        .TD_STYLE1 {
            background-color: #c0c4cc;
            padding-left: 27px;
        }

        #yuan {
            height: 100px;
        }
    </style>
</head>

<body>
    <div id="app">
        <form>
            <table width="100%">
                <tr>
                    <td>

                        <el-breadcrumb separator="/" style="font-size:16px;margin-top:27px">
                            <el-breadcrumb-item :to="{ path: '/' }">人力资源</el-breadcrumb-item>
                            <el-breadcrumb-item><a href="#">调动管理</a></el-breadcrumb-item>
                            <el-breadcrumb-item>调动登记</el-breadcrumb-item>
                        </el-breadcrumb>
                    </td>
                </tr>

                <tr>
                    <td align="right">
                        <input type="button" value="提交" class="BUTTON_STYLE1"
                               v-on:click="cx">
                        <input type="button" class="BUTTON_STYLE1"
                               onclick="javascript:window.history.back();" value="返回">
                    </td>
                </tr>
            </table>

            <table width="100%" border="1" cellpadding=0 cellspacing=1
                   bordercolorlight=#848284 bordercolordark=#eeeeee
                   class="TABLE_STYLE1">
                <tr height="21">
                    <td class="TD_STYLE1" width="8%">
                        档案编号
                    </td>
                    <td class="TD_STYLE2" width="10%">
                        <el-input type="text" name="majorChange.humanId" readonly="readonly"
                                  value="bt201211190619440428" class="INPUT_STYLE2" v-model="bh">

                    </td>
                    <td class="TD_STYLE1" width="8%">
                        姓名
                    </td>
                    <td class="TD_STYLE2" width="10%">
                        <el-input type="text" name="majorChange.humanName"
                                  value="杨阳" readonly="readonly"
                                  class="INPUT_STYLE2" v-model="name">
                    </td>
                    <td class="TD_STYLE1" width="8%">
                    </td>
                    <td class="TD_STYLE2" width="10%">
                    </td>
                    <td class="TD_STYLE1" width="8%">
                    </td>
                    <td class="TD_STYLE2" width="10%">
                    </td>
                </tr>
                <tr>

                    <td class="TD_STYLE1" width="8%">
                        原一级机构
                    </td>
                    <td class="TD_STYLE2">
                        <el-input type="text" name="majorChange.firstKindName"
                                  value="Ⅰ级结构" readonly="readonly"
                                  class="INPUT_STYLE2" v-model="first">
                            <input type="hidden" name="majorChange.firstKindId" value="1353318953319">
                    </td>
                    <td class="TD_STYLE1" width="8%">
                        原二级机构
                    </td>
                    <td class="TD_STYLE2" width="10%">
                        <el-input type="text" name="majorChange.secondKindName"
                                  value="Ⅱ级结构3" readonly="readonly"
                                  class="INPUT_STYLE2" v-model="second">
                            <input type="hidden" name="majorChange.secondKindId" value="1353318979558">
                    </td>
                    <td class="TD_STYLE1" width="8%">
                        原三级机构
                    </td>
                    <td class="TD_STYLE2" width="10%">
                        <el-input type="text" name="majorChange.thirdKindName"
                                  value="" readonly="readonly"
                                  class="INPUT_STYLE2" v-model="third">
                            <input type="hidden" name="majorChange.thirdKindId" value="1353319077370">
                    </td>
                    <td class="TD_STYLE1" width="8%">
                    </td>
                    <td class="TD_STYLE2" width="10%">
                    </td>
                </tr>

                <tr>
                    <td class="TD_STYLE1">
                        原职位分类
                    </td>
                    <td class="TD_STYLE2">
                        <el-input type="text" name="majorChange.majorKindName"
                                  value="软件开发" readonly="readonly"
                                  class="INPUT_STYLE2" v-model="fl">
                            <input type="hidden" name="majorChange.majorKindId" value="02">
                    </td>
                    <td class="TD_STYLE1" width="12%">
                        原职位名称
                    </td>
                    <td class="TD_STYLE2">
                        <el-input type="text" name="majorChange.majorName"
                                  value="程序员" readonly="readonly"
                                  class="INPUT_STYLE2" v-model="mc">
                            <input type="hidden" name="majorChange.majorId" value="02">
                    </td>
                    <td class="TD_STYLE1">
                        原薪酬标准
                    </td>
                    <td class="TD_STYLE2">
                        <el-input type="text" name="majorChange.salaryStandardName"
                                  value="经理级别"
                                  readonly="readonly" class="INPUT_STYLE2" v-model="bz">
                            <input type="hidden" name="majorChange.salaryStandardId" value="1353320082662">
                    </td>
                    <td class="TD_STYLE1">
                        原薪酬总额
                    </td>
                    <td class="TD_STYLE2">
                        <el-input type="text" name="majorChange.salarySum"
                                  value="" readonly="readonly"
                                  class="INPUT_STYLE2" v-model="zong">
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        新机构名称
                    </td>
                    <td class="TD_STYLE2">

                        <el-cascader v-model="value"
                                     :options="options"
                                     placeholder="请选择新机构名称"
                                     :props="{ checkStrictly: true }"
                                     clearable></el-cascader>
                        <input type="hidden" name="majorChange.newFirstKindName" id="newFirstKindName">
                    </td>


                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        新职位分类/名称
                    </td>
                    <td class="TD_STYLE2">
                        <el-cascader v-model="value1"
                                     :options="options1"
                                     placeholder="请选择新职位分类/名称"
                                     clearable></el-cascader>


                    </td>

                    <td class="TD_STYLE1">
                        新薪酬标准
                    </td>
                    <td class="TD_STYLE2">
                        <el-select v-model="value2"  placeholder="请选择新薪酬标准" class="INPUT_STYLE2" v-on:change="xin" style="width:160px">

                            <el-option v-for="item in options2"
                                       :key="item.Ssd_id"
                                       :label="item.Standard_name"
                                       :value="item.Ssd_id">
                            </el-option>

                        </el-select>
                        <input type="hidden" name="majorChange.newSalaryStandardName" id="newSalaryStandardName">

                    </td>
                    <td class="TD_STYLE1">
                        新薪酬总额
                    </td>
                    <td class="TD_STYLE2">
                        <el-input type="text" name="majorChange.newSalarySum" id="newSalarySum" readonly="readonly"
                                  value="0.00" class="INPUT_STYLE2" v-model="zong1">
                    </td>
                </tr>

                <tr>
                    <td class="TD_STYLE1">
                        登记人
                    </td>
                    <td class="TD_STYLE2">
                        <el-input type="text" name="majorChange.register" readonly="readonly" value="" v-model="djr"
                                  class="INPUT_STYLE2">
                    </td>
                    <td class="TD_STYLE1">
                        登记时间
                    </td>
                    <td class="TD_STYLE2">
                        <el-input type="text" name="majorChange.registTime" readonly="readonly"
                                  id="Tdate" class="INPUT_STYLE2">

                    </td>
                    <td class="TD_STYLE1">
                    </td>
                    <td class="TD_STYLE2">
                    </td>
                    <td class="TD_STYLE1">
                    </td>
                    <td class="TD_STYLE2">
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        调动原因
                    </td>
                    <td colspan="7" class="TD_STYLE2">
                        <el-input v-model="yuan" class="TEXTAREA_STYLE1" colspan="7" id="yuan" type="textarea">

                    </td>
                </tr>
            </table>
        </form>
    </div>
</body>
</html>
<SCRIPT type="text/javascript">
    function time() {
        var tdate = document.getElementById("Tdate");
        var d = new Date();
        var y = d.getFullYear();
        var moth = d.getMonth() + 1;
        var date = d.getDate();
        var h = d.getHours();
        var m = d.getMinutes();
        var s = d.getSeconds();
        var hh = 20 - 1 - h;
        var mm = 60 - 1 - m;
        var ss = 60 - s;
        if (hh > 0) {
            mm = mm + 60 * hh;
        }
        if (moth < 10) {
            moth = "0" + moth;
        }
        if (date < 10) {
            date = "0" + date;
        }
        if (h < 10) {
            h = "0" + h;
        }
        if (m < 10) {
            m = "0" + m;
        }
        if (s < 10) {
            s = "0" + s;
        }
        if (mm < 10) {
            mm = "0" + mm;
        }
        if (ss < 10) {
            ss = "0" + ss;
        }

        tdate.value = y + "-" + moth + "-" + date + " " + h + ":" + m + ":" + s;


    }
    window.onload = time;
    var out = window.setInterval(time, 1000);
</SCRIPT>
<script>

    var vm = new Vue({
        el: "#app",
        data: {
            bh: "",
            name: "",
            first: "",
            firstid: "",
            second: "",
            secondid: "",
            third: "",
            thirdid: "",
            bz: "",
            bzid:"",
            mc: "",
            mcid:"",
            zong: "",
            fl: "",
            flid:"",
            options: [],
            options1: [],
            options2: [],
            value: "",
            value1: "",
            value2: "",
            djr: "",
            bz1: "",
            bzbh:"",
            zong1: "0.0",
            yuan:""

        },
        methods: {
            fill() {
                axios.get('/Transfer/Xia')
                    .then(res => {
                        this.options = res.data;

                    })
                    .catch(err => {
                        console.log(err);
                    })
                axios.get('/Transfer/Xia1')
                    .then(res => {
                        this.options1 = res.data;

                    })
                    .catch(err => {
                        console.log(err);
                    })
                     this.options2=@Html.Raw(Json.Encode(cs));
                this.bh =@Html.Raw(Json.Encode(ViewBag.s.human_id));
                this.name =@Html.Raw(Json.Encode(ViewBag.s.human_name));
                this.first =@Html.Raw(Json.Encode(ViewBag.s.first_kind_name));
                this.firstid=@Html.Raw(Json.Encode(ViewBag.s.first_kind_id));
                this.second =@Html.Raw(Json.Encode(ViewBag.s.second_kind_name));
                 this.secondid =@Html.Raw(Json.Encode(ViewBag.s.second_kind_id));
                this.third =@Html.Raw(Json.Encode(ViewBag.s.third_kind_name));
                 this.thirdid =@Html.Raw(Json.Encode(ViewBag.s.third_kind_id));
                this.fl =@Html.Raw(Json.Encode(ViewBag.s.human_major_kind_name));
                  this.flid =@Html.Raw(Json.Encode(ViewBag.s.human_major_kind_id));
                this.mc =@Html.Raw(Json.Encode(ViewBag.s.hunma_major_name));
                 this.mcid =@Html.Raw(Json.Encode(ViewBag.s.human_major_id));
                this.bz =@Html.Raw(Json.Encode(ViewBag.s.salary_standard_name));
                 this.bzid =@Html.Raw(Json.Encode(ViewBag.s.salary_standard_id));
                this.zong =@Html.Raw(Json.Encode(ViewBag.s.salary_sum));
      this.djr =@Html.Raw(Json.Encode(ViewBag.u.U_name));

            },
            cx() {
                var tt = document.getElementById("Tdate").value;
              
                if (this.value == "") {
                    alert("请选择新的机构名称！")
                    return;
                }
                if (this.value1 == "") {
                    alert("请选择新的职位！")
                    return;
                }
                if (this.value2 == "") {
                    alert("请选择新的薪酬标准！")
                    return;
                }
                axios.get('/Transfer/Insert', {
                    params: {
                        first_kind_id: this.firstid,
                        first_kind_name: this.first,
                        second_kind_id: this.secondid,
                        second_kind_name: this.second,
                        third_kind_id: this.thirdid,
                        third_kind_name: this.third,
                        major_kind_id: this.flid,
                        major_kind_name: this.fl,
                        major_id: this.mcid,
                        major_name: this.mc,
                        new_first_kind_id: this.value[0],
                        new_second_kind_id: this.value[1],
                        new_third_kind_id: this.value[2],
                        new_major_kind_id: this.value1[0],
                        new_major_id: this.value1[1],
                        human_id: this.bh,
                        human_name: this.name,
                        salary_standard_id: this.bzid,
                        salary_standard_name: this.bz,
                        salary_sum: this.zong,
                        new_salary_standard_id: this.bzbh,
                        new_salary_standard_name: this.bz1,
                        new_salary_sum: this.zong1,
                        change_reason: this.yuan,
                        register: this.djr,
                        regist_time:tt
                    }
                })
                    .then(res => {
                        if (res.data > 0) {
                            alert("提交成功！");
                            location.href = '/Transfer/Check_list';
                        }
                    }).catch(err => {
                        console.log(err);
                    })
            },
            xin(value) {

                axios.get('/Transfer/Cx', {
                    params: {
                        id: value

                    }
                })
                    .then(res => {

                        this.zong1 = res.data.Salary_sum
                        this.bz1 = res.data.Standard_name;
                        this.bzbh = res.data.Standard_id;

                    }).catch(err => {
                        console.log(err);
                    })
            },

        },
        mounted: function () {
            this.fill();
        },

    })
</script>



