using Dapper;
using Models;
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DAO
{
    public class CFFKDAO
    {
        string conStr = "Data Source=.;Initial Catalog=HR_DB;Integrated Security=True";
        /// <summary>
        /// 查询全部
        /// </summary>
        /// <returns></returns>
        public async Task<List<CFFK>> FirstSelectAsync()
        {
            using (SqlConnection connection = new SqlConnection(conStr))
            {
                string sql = "select * from [dbo].[config_file_first_kind]";
                return (List<CFFK>)await connection.QueryAsync<CFFK>(sql);
            }
        }
        /// <summary>
        /// 根据ID查全部
        /// </summary>
        /// <returns></returns>
        public async Task<CFFK> FirstSelectIDAsync(int id)
        {
            using (SqlConnection connection = new SqlConnection(conStr))
            {
                string sql = $"select * from [dbo].[config_file_first_kind] where ffk_id='{id}'";
                return await connection.QueryFirstAsync<CFFK>(sql);
            }
        }
        /// <summary>
        /// 添加
        /// </summary>
        /// <param name="cFFK"></param>
        /// <returns></returns>
        public async Task<int> FirstInsertAsync(CFFK cFFK)
        {
            using (SqlConnection connection = new SqlConnection(conStr))
            {
                string s = "SELECT TOP 1 \r\n    CASE \r\n        WHEN [first_kind_id] + 1 < 10 THEN '0' + CAST([first_kind_id] + 1 AS VARCHAR(2))\r\n        ELSE CAST([first_kind_id] + 1 AS VARCHAR(2))\r\n    END AS FormattedValue\r\nFROM [dbo].[config_file_first_kind] \r\nORDER BY ffk_id DESC;\r\n";
             string id= await connection.QueryFirstAsync<string>(s);
                string sql = $@"insert into [dbo].[config_file_first_kind]( first_kind_id, first_kind_name, first_kind_salary_id, first_kind_sale_id)values('{id}','{cFFK.First_kind_name}','{cFFK.First_kind_salary_id}','{cFFK.First_kind_sale_id}')";
                return await connection.ExecuteAsync(sql);
            }
        }
        /// <summary>
        /// 删除
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        public async Task<int> FirstDeleteAsync(int id)
        {
            using (SqlConnection connection = new SqlConnection(conStr))
            {
              
                string sql = $@"delete from [dbo].[config_file_first_kind] where [ffk_id]='{id}'";
                return await connection.ExecuteAsync(sql);
            }
        }
        /// <summary>
        /// 修改
        /// </summary>
        /// <param name="fFK"></param>
        /// <returns></returns>
        public async Task<int> FirstUpdateAsync(CFFK fFK)
        {
            using (SqlConnection connection = new SqlConnection(conStr))
            {

                string sql = $@"update [dbo].[config_file_first_kind] set   first_kind_salary_id='{fFK.First_kind_salary_id}', first_kind_sale_id='{fFK.First_kind_sale_id}' where ffk_id='{fFK.Ffk_id}'";
                return await connection.ExecuteAsync(sql);
            }
        }

    }
}
