using Dapper;
using Models;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DAO
{
    public class EngageResumeDao
    {
        string str = "Data Source=.;Initial Catalog=HR_DB;Integrated Security=True";
        public async Task<int> ERInsertAsync(EngageResume ee)
        {
            using(SqlConnection con = new SqlConnection(str))
            {
                //string mdk = $@"";
                //string midk = await con.QueryFirstAsync<string>(mdk);

                //string md = $@"";
                //string mid = await con.QueryFirstAsync<string>(md);

                string sql = $@"insert into engage_resume(human_name, engage_type, human_address,
                human_postcode, human_major_kind_id, human_major_kind_name, human_major_id,
                human_major_name, human_telephone, human_homephone, human_mobilephone, human_email,
                human_hobby,human_specility, human_sex, human_religion, human_party,human_nationality,
                human_race, human_birthday, human_age,human_educated_degree, human_educated_years,
                human_educated_major, human_college, human_idcard, human_birthplace,
                demand_salary_standard, human_history_records, remark, recomandation, human_picture,
                attachment_name, check_status, register, regist_time, checker, check_time, 
                interview_status, total_points, test_amount, test_checker, test_check_time, pass_register,
                pass_regist_time, pass_checker, pass_check_time, pass_check_status, pass_checkComment,
                pass_passComment) values('{ee.human_name}','{ee.engage_type}','{ee.human_address}',
                '{ee.human_postcode}',(select major_kind_id from config_major_kind where major_kind_name = '{ee.human_major_kind_name}'),'{ee.human_major_kind_name}',
                (select major_id from config_major where major_name = '{ee.human_major_name}'),'{ee.human_major_name}','{ee.human_telephone}','{ee.human_homephone}',
                '{ee.human_mobilephone}','{ee.human_email}','{ee.human_hobby}','{ee.human_specility}',
                '{ee.human_sex}','{ee.human_religion}','{ee.human_party}','{ee.human_nationality}',
                '{ee.human_race}','{ee.human_birthday}','{ee.human_age}','{ee.human_educated_degree}',
                '{ee.human_educated_years}','{ee.human_educated_major}','{ee.human_college}',
                '{ee.human_idcard}','{ee.human_birthplace}','{ee.demand_salary_standard}',
                '{ee.human_history_records}','{ee.remark}','{ee.recomandation}','{ee.human_picture}',
                '{ee.attachment_name}','{ee.check_status}','{ee.register}','{ee.regist_time}',
                '{ee.checker}','{ee.check_time}','{ee.interview_status}','{ee.total_points}',
                '{ee.test_amount}','{ee.test_checker}','{ee.test_check_time}','{ee.pass_register}',
                '{ee.pass_regist_time}','{ee.pass_checker}','{ee.pass_check_time}','{ee.pass_check_status}',
                '{ee.pass_checkComment}','{ee.pass_passComment}')";
                return await con.ExecuteAsync(sql);
            }
        }
        public async Task<IEnumerable<First>> ERXiaAsync()
        {
            using (SqlConnection con = new SqlConnection(str))
            {
                string sql = $"select major_kind_id as value,major_kind_name as label from [dbo].[config_major_kind]";
                List<First> first_Cascaders = new List<First>() { };
                List<First> fir = con.Query<First>(sql).ToList();
                foreach (var item in fir)
                {
                    string sql_1 = $"select major_id as value,major_name as label from [dbo].[config_major] where major_kind_id={item.value} ";
                    First cf = new First()
                    {
                        value = item.value,
                        label = item.label,
                        children = con.Query<Second>(sql_1).ToList(),
                    };
                    first_Cascaders.Add(cf);
                }
                return first_Cascaders;
            }
        }
        public async Task<FenYe<EngageResume>> ERSelectAsync(FenYe<EngageResume> er, string tj)
        {
            using (SqlConnection con = new SqlConnection(str))
            {
                DynamicParameters dd = new DynamicParameters();
                dd.Add("@pageSize", er.PageSize);
                dd.Add("@keyName", "res_id");
                dd.Add("@tableName", "engage_resume");
                dd.Add("@currentPage", er.CurrentPage);
                dd.Add("@where", tj);
                dd.Add("@row", direction: ParameterDirection.Output, dbType: DbType.Int32);
                string sql = "exec [dbo].[FenYe] @pageSize, @keyName, @tableName, @currentPage, @where, @row out";
                er.List = await con.QueryAsync<EngageResume>(sql, dd);
                er.Rows = dd.Get<int>("row");
                return er;
            }
        }
    }
}
