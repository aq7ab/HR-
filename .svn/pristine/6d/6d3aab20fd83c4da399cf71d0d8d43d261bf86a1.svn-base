
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="stylesheet" href="../../css/table.css" type="text/css" />
    <script type="text/javascript" src="../../javascript/jquery-1.7.2.js"></script>

    <script src="~/Scripts/vue/dist/vue.js"></script>
    <script src="~/Scripts/element-ui/lib/index.js"></script>
    <link href="~/Scripts/element-ui/lib/theme-chalk/index.css" rel="stylesheet" />
    <script src="~/Scripts/axios/dist/axios.js"></script>
    <title>用户管理</title>
    <style type="text/css">
      
        body {
            background: #F1F2F7
        }
        .el-button--danger {
            color: rgb(255, 255, 255);
            background-color: #2A3542;
            border-color: #2A3542;
        }

            .el-button--danger:focus, .el-button--danger:hover {
                color: rgb(255, 255, 255);
                background-color: #2A3542;
                border-color: #2A3542;
            }
    </style>
</head>
<body>
    <div id="app">
        <table width="100%">

            <el-breadcrumb separator="/" style="font-size: 16px; margin-top: 27px">
                <el-breadcrumb-item :to="{ path: '/' }">人力资源</el-breadcrumb-item>
                <el-breadcrumb-item><a href="#">权限管理</a></el-breadcrumb-item>
                <el-breadcrumb-item>用户管理</el-breadcrumb-item>
            </el-breadcrumb>

            <tr>
                <td>
                    &nbsp;
                </td>
            </tr>
            <tr>
                <td style="color: #2A3542">
                    当前角色总数：
                    {{row}}
                    例
                </td>
            </tr>
            <tr>
                <td align="right">
                    <el-button size="mini" class="BUTTON_STYLE1"
                               v-on:click="tj">添加用户</el-button>
                </td>
            </tr>
        </table>
        					
        <el-table :data="table"
                  stripe
                  style="width: 100%; background-color: #96E1A0;">
            <el-table-column prop="u_id"
                             label="用户编号">
            </el-table-column>
            <el-table-column prop="u_name"
                             label="用户名称">
            </el-table-column>
            <el-table-column prop="u_true_name"
                             label="真实姓名">
            </el-table-column>
            <el-table-column prop="u_password"
                             label="用户密码">
                
            </el-table-column>
            <el-table-column prop="RolesName"
                             label="用户身份">
               
            </el-table-column>
            <el-table-column label="操作">
                <template slot-scope="scope">

                    <el-button size="mini"
                               v-on:click="bj(scope.row)">编辑</el-button>
                    <el-button size="mini"
                               type="danger"
                               v-on:click="sc(scope.row)">删除</el-button>
                </template>
            </el-table-column>
        </el-table>

        <el-pagination v-on:size-change="handleSizeChange"
                       v-on:current-change="handleCurrentChange"
                       :current-page="currentPage"
                       :page-sizes="[3, 6, 9, 12]"
                       :page-size="pageSize"
                       layout="total, sizes, prev, pager, next, jumper"
                       :total="row">
        </el-pagination>



    </div>

</body>
</html>
<script type="text/javascript">
    var vm = new Vue({
        el: "#app",
        data: {
            table: [],
            currentPage: 1,
            pageSize: 3,
            row: 1,
        },
        methods: {
            je(val) {
                return Number(val).toFixed(2);
            },
            fill: function () {
                axios.get('/Power/FY', {
                    params: {
                        CurrentPage: this.currentPage,
                        PageSize: this.pageSize,
                        tj:"1=1"
                    }
                })
                    .then(res => {
                        this.table = res.data.List;
                        this.row = res.data.Rows;

                    })
                    .catch(err => {
                        console.log(err);
                    })
            },
            handleSizeChange: function (size) {

                this.pageSize = size;
                this.currentPage = 1;
                this.fill();
            },
            handleCurrentChange: function (cpage) {
                this.currentPage = cpage;
                this.fill();
            },
            //添加
            tj() {
                location.href = '/Power/User_add';
            },
            //编辑
            bj: function (i) {
                location.href = '/Power/User_edit?id=' + i.UserRolesID
            },
            //删除
            sc(i) {
                this.$confirm('你确定要删除?', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(() => {
                    axios.get('/Power/Delete', {
                        params: {
                            uid: i.u_id,
                            rid: i.UserRolesID
                        }
                    }).then(res => {
                        if (res.data > 0) {
                            this.$message({
                                type: 'success',
                                message: '删除成功!'
                            });
                            this.fill();
                        }
                    }).catch(err => {
                        console.log(err);
                    })

                }).catch(() => {
                    this.$message({
                        type: 'info',
                        message: '已取消删除'
                    });

                });

            }
        },
        mounted: function () {
            this.fill();
        },
   
    })
</script>