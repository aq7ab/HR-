
@{
Layout = null;
}
<!DOCTYPE html>

<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="stylesheet" href="../../css/table.css" type="text/css" />
    <script type="text/javascript" src="../../javascript/comm/comm.js"></script>
    <script type="text/javascript" src="../../javascript/jquery-1.7.2.js"></script>
    <script src="~/Scripts/vue/dist/vue.js"></script>
    <script src="~/Scripts/element-ui/lib/index.js"></script>
    <link href="~/Scripts/element-ui/lib/theme-chalk/index.css" rel="stylesheet" />
    <script src="~/Scripts/axios/dist/axios.js"></script>
    <title>薪酬标准登记</title>
    <style>
        .TD_STYLE1 {
            background-color: #96E1A0;
            padding-left: 27px;
        }

        .TD_STYLE2 {
            background-color: #D4F8D4;
        }

        .INPUT_STYLE2 {
            background-color: #D4F8D4;
            width: 96%;
        }

        TEXTAREA {
            background-color: #D4F8D4;
            width: 44% !important;
        }
    </style>
</head>
<body>
    <div id="app">
        <form >
            <table width="100%">
                <tr>
                    <td>
                        <font color="black">
                            您正在做的业务是：人力资源--薪酬标准管理--薪酬标准登记
                        </font>
                    </td>
                </tr>
                <tr>
                    <td align="right">
                        <input type="button" value="提 交" v-on:click="check()" class="BUTTON_STYLE1">
                        <input type="reset" value="返 回" class="BUTTON_STYLE1">
                    </td>
                </tr>
            </table>
            <table id="stable" width="100%" border="1" cellpadding=0 cellspacing=1
                   bordercolorlight=#848284 bordercolordark=#eeeeee
                   class="TABLE_STYLE1">
                <tr>
                    <td width="74" class="TD_STYLE1">
                        薪酬标准编号
                    </td>
                    <td width="168" class="TD_STYLE2">
                        <input type="text" name="standard.standardId" value="" v-model="bh" readonly="readonly" class="INPUT_STYLE2">
                    </td>
                    <td width="83" class="TD_STYLE1">
                        薪酬标准名称
                    </td>
                    <td width="171" class="TD_STYLE2">
                        <input type="text" name="standard.standardName" id="standardName" v-model="standardName" class="INPUT_STYLE2">
                    </td>
                    <td width="170" class="TD_STYLE1">
                        薪酬总额
                    </td>
                    <td width="138" class="TD_STYLE2">
                        <input type="text" name="standard.salarySum" id="sumSalary" value="0.0" readonly class="INPUT_STYLE2" />
                    </td>
                    <td width="103" class="TD_STYLE1">
                        &nbsp;
                    </td>
                    <td width="95" height="26" class="TD_STYLE2">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        制定人
                    </td>
                    <td class="TD_STYLE2">
                        <input type="text" id="designer" name="standard.designer" v-model="designer" class="INPUT_STYLE2">
                    </td>
                    <td class="TD_STYLE1">
                        登记人

                    </td>
                    <td class="TD_STYLE2">
                        <input type="text" name="standard.register"  id="standardid" value=" @ViewBag.u.U_name" readonly="readonly" class="INPUT_STYLE2">
                    </td>
                    <td class="TD_STYLE1">
                        登记时间
                    </td>
                    <td class="TD_STYLE2">
                        <input type="text" id="Tdate" name="standard.registTime" readonly="readonly"  class="INPUT_STYLE2">
                    </td>
                    <td class="TD_STYLE1">
                        &nbsp;
                    </td>
                    <td class="TD_STYLE2">
                        &nbsp;
                    </td>
                </tr>
                <tr>
                    <td class="TD_STYLE1">
                        备注
                    </td>
                    <td colspan="7" class="TD_STYLE2">
                        <textarea name="standard.remark" rows="4" class="TEXTAREA_STYLE1" v-model="bei"></textarea>
                    </td>
                </tr>
                <tr class="TD_STYLE1" v-if="zj">
                    <td align="center">
                        序号
                    </td>
                    <td colspan="3">
                        薪酬项目名称
                    </td>
                    <td>
                        金额
                    </td>
                    <td colspan="3">
                        &nbsp;
                    </td>
                </tr>
                <tbody v-for="(cc,index) in xh">

                    <tr class="TD_STYLE2">
                        <td align="center">
                            {{cc.pbc_id}}

                            <input type="hidden"  value="">
                        </td>
                        <td colspan="3">
                            {{cc.attribute_name}}
                            <input type="hidden" id="details1" value="">
                        </td>
                        <td>
                            <input type="text" :id="'salary'+(index+1)" value="0.00" 
                                  v-on:keyup="countMoney('salary'+(index+1))" class="INPUT_STYLE2">
                        </td>
                        <td colspan="3">
                            &nbsp;
                        </td>
                    </tr>

                </tbody>

            </table>
            <template >

                <el-checkbox :indeterminate="isIndeterminate" v-model="checkAll" v-on:change="handleCheckAllChange">全选</el-checkbox>
                <input type="button" value="请选择薪酬组合" style="margin-left:10px" v-on:click="zh()" />
                <div style="margin: 15px 0;"></div>
                <el-checkbox-group v-model="checkedCities" v-on:change="handleCheckedCitiesChange">
                    <el-checkbox v-for="city in cities" :label="city" :key="city.pbc_id">
                        {{city.attribute_name}}
                    </el-checkbox>
                </el-checkbox-group>
            </template>
            <p>
                &nbsp;
            </p>
        </form>

       </div>
</body>
</html>
<script type="text/javascript">
   
    function time() {
        var tdate = document.getElementById("Tdate");
        var d = new Date();
        var y = d.getFullYear();
        var moth = d.getMonth() + 1;
        var date = d.getDate();
        var h = d.getHours();
        var m = d.getMinutes();
        var s = d.getSeconds();
        var hh = 20 - 1 - h;
        var mm = 60 - 1 - m;
        var ss = 60 - s;
        if (hh > 0) {
            mm = mm + 60 * hh;
        }
        if (moth < 10) {
            moth = "0" + moth;
        }
        if (date < 10) {
            date = "0" + date;
        }
        if (h < 10) {
            h = "0" + h;
        }
        if (m < 10) {
            m = "0" + m;
        }
        if (s < 10) {
            s = "0" + s;
        }
        if (mm < 10) {
            mm = "0" + mm;
        }
        if (ss < 10) {
            ss = "0" + ss;
        }

        tdate.value = y + "-" + moth + "-" + date + " " + h + ":" + m + ":" + s;

    }
    window.onload = time;
    var out = window.setInterval(time, 1000);



</script>
<script>
    let obj=[]
    var vm = new Vue({
        el: "#app",
        data: {
            checkAll: false,
            checkedCities: [],
            cities: [],
            isIndeterminate: true,
            xh: [],
            zj: false,
            bh: "",
            bei: "",
            standardName: "",
            Tdate: "",
            standardid: "",
            designer: "",
            

        },
        methods: {
            


            check: function () {
                var designer = document.getElementById("designer");
                
                var standardName = document.getElementById("standardName");
                var ii = document.getElementById("standardid").value;
                var tt = document.getElementById("Tdate").value;
                var tt1 = document.getElementById("sumSalary").value;
                
                if (designer.value.length <= 0) {
                    alert("制定人不可为空!!!");
                    return;
                }
                if (standardName.value.length <= 0) {
                    alert("薪酬标准名称不可为空!!!");
                    return;
                }
                let it = "";
                let itname = "";
                let sum = "";
                for (var i = 1; i <= this.checkedCities.length; i++) {
                    var sal = document.getElementById("salary" + i).value;
                    if (sal == "") {
                        sal = "0.00";
                    }
                    if (i == this.checkedCities.length) {
                        sum += sal;
                    } else {
                        sum += sal + ",";
                    }
                }
                for (var i = 0; i < this.checkedCities.length; i++) {
                    if (i + 1 == this.checkedCities.length) {
                        it += this.checkedCities[i].pbc_id;
                        itname += this.checkedCities[i].attribute_name;
                    } else {
                        it += this.checkedCities[i].pbc_id + ",";
                        itname += this.checkedCities[i].attribute_name + ",";
                    }
                }
               
                axios.get('/SalaryCriterion/Tj', {
                    params: {
                        bh: it,
                        name: itname,
                        qian: sum,
                        standard_id: this.bh,
                        standard_name:this.standardName,
                        designer: this.designer,
                        register: ii,
                        regist_time: tt,
                        remark: this.bei,
                        salary_sum: tt1

                    }
                })
                    .then(res => {
                        if (res.data > 0) {
                            alert("添加成功！")
                        } else {
                            alert("添加失败！")
                        }

                    }).catch(err => {
                        console.log(err);
                    })
            },
            countMoney: function (o) {
                this.obj = this.xh;
                    if (isNaN(document.getElementById(o).value) || document.getElementById(o).value < 0) {
            alert("金额填写错误!");
            document.getElementById(o).value = "0.00";
            return;
        }
                var sum = 0;
               
                for (var i = 1; i <=this.obj.length; i++) {
            var salary = document.getElementById("salary" + i).value;
            if (salary == "") {
                salary = "0.00";
            }
            sum = Number(sum) + Number(salary);
                   
                }
              
        document.getElementById("sumSalary").value = sum;
            },
           
            zh: function () {
                this.zj = true;
                this.xh = this.checkedCities;
            },
            fill: function () {
                axios.get('/SalaryCriterion/Qx')
                    .then(res => {
                        this.cities = res.data;

                    }).catch(err => {
                        console.log(err);
                    })
            },
            b: function () {
                axios.get('/SalaryCriterion/Bh')
                    .then(res => {
                        this.bh = res.data;

                    }).catch(err => {
                        console.log(err);
                    })
            },
            handleCheckAllChange: function (val) {
                this.checkedCities = val ? this.cities : [];    
                this.isIndeterminate = false;
            },
            handleCheckedCitiesChange: function (value) {
                let checkedCount = value.length;
                this.checkAll = checkedCount === this.cities.length;
                this.isIndeterminate = checkedCount > 0 && checkedCount < this.cities.length;
            }
        },
        mounted: function () {
            this.fill();
            this.b();
        },
    })
</script>


